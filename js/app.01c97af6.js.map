{"version":3,"file":"js/app.01c97af6.js","mappings":"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","sources":["webpack://tos/./src/App.vue","webpack://tos/./src/components/StartComponent.vue","webpack://tos/./src/components/StartComponent.vue?15b1","webpack://tos/./src/components/GradeSelectComponent.vue","webpack://tos/./src/components/GradeSelectComponent.vue?f426","webpack://tos/./src/components/QuestionComponent.vue","webpack://tos/./src/components/QuestionComponent.vue?3d86","webpack://tos/./src/components/OptimizationComponent.vue","webpack://tos/./src/config/api.js","webpack://tos/./src/components/OptimizationComponent.vue?ab53","webpack://tos/./src/components/ScheduleComponent.vue","webpack://tos/./src/components/ScheduleComponent.vue?b07d","webpack://tos/./src/App.vue?7ccd","webpack://tos/./src/main.js","webpack://tos/webpack/bootstrap","webpack://tos/webpack/runtime/chunk loaded","webpack://tos/webpack/runtime/compat get default export","webpack://tos/webpack/runtime/define property getters","webpack://tos/webpack/runtime/global","webpack://tos/webpack/runtime/hasOwnProperty shorthand","webpack://tos/webpack/runtime/jsonp chunk loading","webpack://tos/webpack/startup"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <transition name=\"fade\" mode=\"out-in\">\n      <div v-if=\"currentView === 'start'\" key=\"start\">\n        <start-component @start-clicked=\"showGradeSelect\"/>\n      </div>\n\n      <div v-else-if=\"currentView === 'grade-select'\" key=\"grade-select\">\n        <grade-select-component\n          :initialGrade=\"grade\"\n          :initialCredits=\"desiredCredits\"\n          @info-submitted=\"handleInfoSubmission\"\n        />\n      </div>\n\n      <div v-else-if=\"currentView === 'question'\" key=\"question\">\n        <question-component\n          @answer=\"handleAnswer\"\n          :questionNumber=\"currentQuestionIndex + 1\"\n          :totalQuestions=\"questions.length\"\n        >\n          <template v-slot:question>\n            {{ currentQuestion }}\n          </template>\n        </question-component>\n      </div>\n\n      <div v-else-if=\"currentView === 'optimization'\" key=\"optimization\">\n        <optimization-component\n          :simulation-time=\"10000\"\n          :optimization-data=\"{\n            grade: grade,\n            desired_credits: desiredCredits,\n            user_morning: getAnswerFor(0),\n            user_late: getAnswerFor(1),\n            user_lunch: getAnswerFor(2),\n            user_dayoff: getAnswerFor(3),\n            user_no_large_gap: getAnswerFor(4)\n          }\"\n          @optimization-completed=\"showSchedule\"\n        />\n      </div>\n\n      <div v-else-if=\"currentView === 'schedule'\" key=\"schedule\">\n        <schedule-component\n          :scheduleData=\"scheduleData\"\n          :apiResult=\"apiResult\"\n          :userPreferences=\"optimizationData\"\n          @restart=\"restartApp\"\n        />\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport StartComponent from './components/StartComponent.vue';\nimport GradeSelectComponent from './components/GradeSelectComponent.vue';\nimport QuestionComponent from './components/QuestionComponent.vue';\nimport OptimizationComponent from './components/OptimizationComponent.vue';\nimport ScheduleComponent from './components/ScheduleComponent.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    StartComponent,\n    GradeSelectComponent,\n    QuestionComponent,\n    OptimizationComponent,\n    ScheduleComponent\n  },\n  data() {\n    return {\n      currentView: 'start',\n      currentQuestionIndex: 0,\n      grade: null,\n      desiredCredits: 15,\n      questions: [\n        '아침 수업을 선호하시나요?',                 // user_morning\n        '저녁 시간대 수업은 피하고 싶으신가요?',     // user_late\n        '점심 시간대(12~1시) 수업은 피하고 싶으신가요?', // user_lunch\n        '일주일에 최소 하루는 공강이 있었으면 좋겠나요?', // user_dayoff\n        '수업 사이 긴 공강은 피하고 싶으신가요?'     // user_no_large_gap\n      ],\n      answers: [],\n      scheduleData: [],\n      optimizationData: null,\n      apiResult: null\n    }\n  },\n  computed: {\n    currentQuestion() {\n      return this.questions[this.currentQuestionIndex];\n    }\n  },\n  methods: {\n    showGradeSelect() {\n      this.currentView = 'grade-select';\n    },\n    handleInfoSubmission(info) {\n      this.grade = info.grade;\n      this.desiredCredits = info.credits;\n      this.currentView = 'question';\n    },\n    handleAnswer(answer) {\n      this.answers.push({\n        question: this.currentQuestion,\n        answer: answer\n      });\n\n      if (this.currentQuestionIndex < this.questions.length - 1) {\n        this.currentQuestionIndex++;\n      } else {\n        // 모든 질문에 답변을 완료하면 최적화 준비\n        this.prepareOptimizationRequest();\n        this.currentView = 'optimization';\n      }\n    },\n\n    prepareOptimizationRequest() {\n      // FastAPI 모델에 맞는 요청 데이터 준비\n      this.optimizationData = {\n        grade: this.grade,\n        desired_credits: this.desiredCredits,\n        user_morning: this.getAnswerFor(0),\n        user_late: this.getAnswerFor(1),\n        user_lunch: this.getAnswerFor(2),\n        user_dayoff: this.getAnswerFor(3),\n        user_no_large_gap: this.getAnswerFor(4)\n      };\n\n      console.log('최적화 요청 데이터:', this.optimizationData);\n    },\n\n    getAnswerFor(questionIndex) {\n      return this.answers[questionIndex]?.answer || false;\n    },\n\n    showSchedule(result) {\n      this.apiResult = result;\n      this.processScheduleResult();\n      this.currentView = 'schedule';\n    },\n\n    processScheduleResult() {\n      if (this.apiResult) {\n        // 최적화 컴포넌트에서 이미 처리된 데이터가 있는 경우\n        if (this.apiResult.processedScheduleData) {\n          this.scheduleData = this.apiResult.processedScheduleData;\n          return;\n        }\n        // 원래 API 응답 형식에서 데이터 처리\n        else if (this.apiResult.selected) {\n          // 서버에서 받은 데이터 구조에서 시간표 항목 생성\n          this.scheduleData = this.convertApiResultToScheduleData(this.apiResult.selected);\n          return;\n        }\n      }\n\n      // 유효한 결과가 없는 경우 더미 데이터 생성\n      this.generateDummySchedule();\n    },\n\n    convertApiResultToScheduleData(selectedCourses) {\n      // 과목 타입 정의 (색상 구분용)\n      const courseTypes = ['study', 'project', 'exercise', 'hobby', 'social'];\n      let scheduleItems = [];\n\n      // 각 과목을 처리\n      selectedCourses.forEach((course, index) => {\n        // 과목 유형 지정 (순환)\n        const courseType = courseTypes[index % courseTypes.length];\n\n        // 각 수업 일정 처리\n        course.schedule_info.forEach(schedule => {\n          // 교시를 실제 시간으로 변환\n          const startTime = this.convertPeriodToTime(schedule.start);\n\n          // 교시 기간을 시간 단위로 변환\n          const periodCount = schedule.end - schedule.start + 1;\n          const durationHours = periodCount / 2; // 2교시 = 1시간\n\n          scheduleItems.push({\n            title: course.name,\n            day: this.getDayNumber(schedule.day),\n            startHour: startTime.hour,\n            startMinute: startTime.minute,\n            duration: durationHours,\n            type: courseType,\n            location: schedule.location || ''\n          });\n        });\n      });\n\n      return scheduleItems;\n    },\n\n    // 새로운 함수: 교시를 실제 시간으로 매핑\n    // 교시를 시간으로 변환하는 함수\n    mapPeriodToTime(period) {\n      // 1교시 = 9:00, 2교시 = 9:30, 3교시 = 10:00 등으로 변환\n      const hour = Math.floor((period - 1) / 2) + 9;\n      const minute = ((period - 1) % 2) * 30;\n      return { hour, minute };\n    },\n\n    // 교시를 시간으로 변환하는 함수\n    convertPeriodToTime(period) {\n      // 1교시 = 9:00, 2교시 = 9:30...\n      const baseHour = 9;\n      const hour = Math.floor((period - 1) / 2) + baseHour;\n      const minute = ((period - 1) % 2) * 30;\n\n      return { hour, minute };\n    },\n\n    // 교시(시간)를 행/열 위치로 변환하는 함수\n    mapScheduleToCellPosition(day, startPeriod, endPeriod) {\n      // 요일 -> 열 번호 변환\n      const column = this.getDayNumber(day);\n\n      // 시작 교시 -> 행 번호 변환 (1교시 = 9:00 = 행 1)\n      const startRow = (startPeriod - 1) * 2 + 1;\n\n      // 교시 기간 -> 행 수 변환 (30분 단위 교시)\n      const periods = endPeriod - startPeriod + 1;\n      const rowSpan = periods;\n\n      return {\n        column: column,\n        row: startRow,\n        rowSpan: rowSpan\n      };\n    },\n\n    // 교시 범위를 그리드에 표시하기 위한 정보로 변환\n    calculateSchedulePosition(start, end) {\n      // 시작 시간 (시, 분)\n      const startTime = this.mapPeriodToTime(start);\n\n      // 30분 단위 교시 개수로 duration 계산\n      const periodCount = end - start + 1;\n\n      // 그리드 행 계산 (9시가 1행)\n      const startRow = Math.floor((startTime.hour - 9) * 2) + (startTime.minute === 30 ? 1 : 0) + 1;\n\n      // duration은 30분 단위 개수를 시간 단위(행)로 변환\n      const durationInRows = periodCount / 2; // 30분 교시 2개 = 1시간(1행)\n\n      return {\n        startRow: startRow,\n        duration: durationInRows\n      };\n    },\n\n    getCourseType(courseName) {\n      // 과목명에 따라 다른 유형 반환 (다른 색상으로 표시하기 위함)\n      const types = ['study', 'project', 'exercise', 'hobby', 'social'];\n      // 간단한 해시 함수로 과목명에 따라 다른 유형 할당\n      const hash = courseName.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n      return types[hash % types.length];\n    },\n\n    getDayNumber(dayChar) {\n      const days = { '월': 1, '화': 2, '수': 3, '목': 4, '금': 5 };\n      return days[dayChar] || 1;\n    },\n\n    getRandomType() {\n      const types = ['study', 'project', 'exercise', 'hobby', 'social'];\n      return types[Math.floor(Math.random() * types.length)];\n    },\n\n    generateDummySchedule() {\n      // 더미 시간표 데이터 생성\n      this.scheduleData = [\n        { day: 1, startHour: 9, duration: 3, title: '마케팅공학', type: 'study', location: 'A동 101호' },\n        { day: 2, startHour: 9, duration: 2, title: '재무관리', type: 'project', location: 'B동 203호' },\n        { day: 2, startHour: 12, duration: 2, title: '빅데이터분석', type: 'exercise', location: '공대 305호' },\n        { day: 3, startHour: 9, duration: 3, title: '실험계획법', type: 'hobby', location: '공학관 402호' },\n        { day: 3, startHour: 12, duration: 3, title: '생산관리', type: 'social', location: '경영관 203호' },\n        { day: 4, startHour: 9, duration: 2, title: '재무관리', type: 'project', location: 'B동 203호' },\n        { day: 4, startHour: 12, duration: 2, title: '빅데이터분석', type: 'exercise', location: '공대 305호' },\n        { day: 5, startHour: 11, duration: 3, title: '제조공학', type: 'study', location: '공학관 301호' }\n      ];\n    },\n\n    restartApp() {\n      // 모든 상태 초기화\n      this.currentView = 'start';  // 시작 화면으로 돌아가기\n      this.currentQuestionIndex = 0;\n      this.grade = null;\n      this.desiredCredits = 15;\n      this.answers = [];\n      this.scheduleData = [];\n      this.optimizationData = null;\n      this.apiResult = null;\n\n      // 페이지 맨 위로 스크롤\n      window.scrollTo(0, 0);\n\n      console.log('앱이 초기화되었습니다.');\n    }\n  }\n}\n</script>\n\n<style>\n.app-container {\n  width: 100%;\n  min-height: 100vh;\n}\n</style>","<template>\n  <div class=\"start-container\">\n    <div class=\"start-content\">\n      <h1 class=\"title\">시간표 만들기</h1>\n      <p class=\"subtitle\">몇 가지 질문에 답하고 맞춤형 시간표를 만들어보세요</p>\n      <button class=\"start-button\" @click=\"onStartClick\">\n        <span>시작하기</span>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <path d=\"M5 12h14\"></path>\n          <path d=\"m12 5 7 7-7 7\"></path>\n        </svg>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'StartComponent',\n  methods: {\n    onStartClick() {\n      this.$emit('start-clicked');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.start-container {\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n.start-content {\n  background-color: white;\n  border-radius: 16px;\n  padding: 40px;\n  text-align: center;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n  max-width: 500px;\n  width: 100%;\n}\n\n.title {\n  color: var(--dark-color);\n  font-size: 32px;\n  margin-bottom: 16px;\n  font-weight: var(--heading-font-weight);\n}\n\n.subtitle {\n  color: var(--gray-color);\n  font-size: 18px;\n  margin-bottom: 40px;\n  line-height: 1.5;\n}\n\n.start-button {\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 8px;\n  padding: 16px 32px;\n  font-size: 18px;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  margin: 0 auto;\n  transition: all 0.3s ease;\n}\n\n.start-button:hover {\n  background-color: var(--secondary-color);\n  transform: translateY(-2px);\n  box-shadow: 0 5px 15px rgba(67, 97, 238, 0.3);\n}\n\n.start-button:active {\n  transform: translateY(0);\n}\n</style>","import { render } from \"./StartComponent.vue?vue&type=template&id=122b5862&scoped=true\"\nimport script from \"./StartComponent.vue?vue&type=script&lang=js\"\nexport * from \"./StartComponent.vue?vue&type=script&lang=js\"\n\nimport \"./StartComponent.vue?vue&type=style&index=0&id=122b5862&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-122b5862\"]])\n\nexport default __exports__","<template>\n  <div class=\"grade-select-container\">\n    <div class=\"grade-select-card\">\n      <h1 class=\"title\">기본 정보 입력</h1>\n\n      <div class=\"select-section\">\n        <h2 class=\"section-title\">학년 선택</h2>\n        <div class=\"button-group\">\n          <button\n            v-for=\"g in [2, 3, 4]\"\n            :key=\"g\"\n            class=\"option-button\"\n            :class=\"{ 'selected': grade === g }\"\n            @click=\"selectGrade(g)\"\n          >\n            {{ g }}학년\n          </button>\n        </div>\n      </div>\n\n      <div class=\"select-section\">\n        <h2 class=\"section-title\">희망 수강 학점</h2>\n        <div class=\"credits-slider\">\n          <input\n            type=\"range\"\n            min=\"12\"\n            max=\"21\"\n            step=\"1\"\n            v-model.number=\"localCredits\"\n            class=\"slider\"\n          />\n          <div class=\"credits-value\">{{ localCredits }}학점</div>\n        </div>\n      </div>\n\n      <button\n        class=\"action-button primary-button\"\n        :disabled=\"!grade\"\n        @click=\"submitInfo\"\n      >\n        다음으로\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'GradeSelectComponent',\n  props: {\n    initialGrade: {\n      type: Number,\n      default: null\n    },\n    initialCredits: {\n      type: Number,\n      default: 15\n    }\n  },\n  data() {\n    return {\n      grade: this.initialGrade,\n      localCredits: this.initialCredits\n    }\n  },\n  methods: {\n    selectGrade(grade) {\n      this.grade = grade;\n    },\n    submitInfo() {\n      if (this.grade) {\n        this.$emit('info-submitted', {\n          grade: this.grade,\n          credits: this.localCredits\n        });\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.grade-select-container {\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n.grade-select-card {\n  background-color: white;\n  border-radius: 16px;\n  padding: 40px;\n  width: 100%;\n  max-width: 500px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n}\n\n.title {\n  color: var(--dark-color);\n  font-size: 28px;\n  margin-bottom: 30px;\n  text-align: center;\n}\n\n.select-section {\n  margin-bottom: 30px;\n}\n\n.section-title {\n  font-size: 18px;\n  color: var(--gray-color);\n  margin-bottom: 15px;\n}\n\n.button-group {\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n}\n\n.option-button {\n  flex: 1;\n  padding: 12px;\n  border: 2px solid #e5e7eb;\n  background-color: white;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  transition: all 0.2s ease;\n}\n\n.option-button:hover {\n  border-color: var(--primary-color);\n}\n\n.option-button.selected {\n  background-color: var(--primary-color);\n  color: white;\n  border-color: var(--primary-color);\n}\n\n.credits-slider {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.slider {\n  width: 100%;\n  margin-bottom: 15px;\n  height: 8px;\n  -webkit-appearance: none;\n  appearance: none;\n  background: #e5e7eb;\n  outline: none;\n  border-radius: 4px;\n}\n\n.slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 20px;\n  height: 20px;\n  background: var(--primary-color);\n  border-radius: 50%;\n  cursor: pointer;\n}\n\n.credits-value {\n  font-size: 24px;\n  font-weight: 600;\n  color: var(--primary-color);\n}\n\n.action-button {\n  width: 100%;\n  padding: 15px;\n  border-radius: 8px;\n  background-color: var(--primary-color);\n  color: white;\n  font-size: 16px;\n  font-weight: 500;\n  border: none;\n  margin-top: 20px;\n  transition: all 0.2s ease;\n}\n\n.action-button:disabled {\n  background-color: #e5e7eb;\n  color: #9ca3af;\n  cursor: not-allowed;\n}\n\n.action-button:not(:disabled):hover {\n  background-color: var(--secondary-color);\n  transform: translateY(-2px);\n}\n</style>","import { render } from \"./GradeSelectComponent.vue?vue&type=template&id=42f36b56&scoped=true\"\nimport script from \"./GradeSelectComponent.vue?vue&type=script&lang=js\"\nexport * from \"./GradeSelectComponent.vue?vue&type=script&lang=js\"\n\nimport \"./GradeSelectComponent.vue?vue&type=style&index=0&id=42f36b56&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-42f36b56\"]])\n\nexport default __exports__","<template>\n  <div class=\"question-container\">\n    <div class=\"question-card\">\n      <div class=\"progress-bar\">\n        <div class=\"progress\" :style=\"{ width: `${progress}%` }\"></div>\n      </div>\n\n      <div class=\"question-content\">\n        <h2 class=\"question-number\">질문 {{ questionNumber }}/{{ totalQuestions }}</h2>\n        <div class=\"question-block\">\n          <slot name=\"question\">Question Block</slot>\n        </div>\n      </div>\n\n      <div class=\"button-group\">\n        <button class=\"answer-button yes-button\" @click=\"onAnswer(true)\">\n          <span class=\"button-text\">예</span>\n          <span class=\"button-icon\">✓</span>\n        </button>\n\n        <button class=\"answer-button no-button\" @click=\"onAnswer(false)\">\n          <span class=\"button-text\">아니오</span>\n          <span class=\"button-icon\">✕</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n  <script>\n  export default {\n    name: 'QuestionComponent',\n    props: {\n      questionNumber: {\n        type: Number,\n        default: 1\n      },\n      totalQuestions: {\n        type: Number,\n        default: 1\n      }\n    },\n    computed: {\n      progress() {\n        return (this.questionNumber / this.totalQuestions) * 100;\n      }\n    },\n    methods: {\n      onAnswer(answer) {\n        this.$emit('answer', answer);\n      }\n    }\n  }\n  </script>\n\n  <style scoped>\n  .question-container {\n    width: 100%;\n    min-height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));\n    padding: 20px;\n    box-sizing: border-box;\n  }\n\n  .question-card {\n    background-color: white;\n    border-radius: 16px;\n    overflow: hidden;\n    width: 100%;\n    max-width: 500px;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n  }\n\n  .progress-bar {\n    height: 8px;\n    background-color: #e9ecef;\n    width: 100%;\n    overflow: hidden;\n  }\n\n  .progress {\n    height: 100%;\n    background-color: var(--accent-color);\n    transition: width 0.3s ease;\n  }\n\n  .question-content {\n    padding: 40px 30px;\n  }\n\n  .question-number {\n    color: var(--gray-color);\n    font-size: 18px;\n    margin-bottom: 24px;\n    font-weight: 500;\n  }\n\n  .question-block {\n    color: var(--dark-color);\n    font-size: 24px;\n    font-weight: 500;\n    line-height: 1.5;\n    margin-bottom: 16px;\n  }\n\n  .button-group {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    padding: 0 30px 40px;\n  }\n\n  .answer-button {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px 24px;\n    border-radius: 8px;\n    font-size: 18px;\n    font-weight: 500;\n    border: none;\n    transition: all 0.2s ease;\n  }\n\n  .yes-button {\n    background-color: #e8f3eb;\n    color: #2a9d46;\n  }\n\n  .no-button {\n    background-color: #f9e9e9;\n    color: #e05252;\n  }\n\n  .yes-button:hover {\n    background-color: #d0e9d6;\n    transform: translateY(-2px);\n  }\n\n  .no-button:hover {\n    background-color: #f5d6d6;\n    transform: translateY(-2px);\n  }\n\n  .button-text {\n    font-weight: 600;\n  }\n\n  .button-icon {\n    width: 24px;\n    height: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n  }\n\n  .yes-button .button-icon {\n    background-color: #2a9d46;\n    color: white;\n  }\n\n  .no-button .button-icon {\n    background-color: #e05252;\n    color: white;\n  }\n  </style>","import { render } from \"./QuestionComponent.vue?vue&type=template&id=48bb3483&scoped=true\"\nimport script from \"./QuestionComponent.vue?vue&type=script&lang=js\"\nexport * from \"./QuestionComponent.vue?vue&type=script&lang=js\"\n\nimport \"./QuestionComponent.vue?vue&type=style&index=0&id=48bb3483&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-48bb3483\"]])\n\nexport default __exports__","<template>\n  <div class=\"optimization-container\">\n    <div class=\"optimization-card\">\n      <div class=\"status-message\" :class=\"{\n        'completed': optimizationCompleted,\n        'error': optimizationFailed\n      }\">\n        <template v-if=\"optimizationCompleted && !reoptimizing\">\n          최적화 완료! 당신의 맞춤형 시간표가 준비되었습니다.\n          <div class=\"taken-course-hint\">\n            시간표의 강의를 클릭하여 제외하고 다시 최적화할 수 있습니다.\n          </div>\n        </template>\n        <template v-else-if=\"reoptimizing\">\n          선택한 강의를 제외하고 시간표를 다시 최적화하는 중...\n        </template>\n        <template v-else-if=\"optimizationFailed\">\n          {{ statusMessage }}\n          <div class=\"error-hint\">\n            <p>시스템 오류가 발생했습니다. 다음 방법을 시도해보세요:</p>\n            <ul>\n              <li>페이지를 새로고침하고 다시 시도</li>\n              <li>다른 옵션으로 시도</li>\n              <li>문제가 지속되면 관리자에게 문의</li>\n            </ul>\n            <button class=\"retry-button\" @click=\"retryOptimization\">다시 시도</button>\n          </div>\n        </template>\n        <template v-else>\n          {{ statusMessage }}\n        </template>\n      </div>\n\n      <div class=\"timetable-container\">\n        <div class=\"timetable\">\n          <div class=\"timetable-row header-row\">\n            <div class=\"timetable-cell time-header-cell\"></div>\n            <div class=\"timetable-cell header-cell\">월</div>\n            <div class=\"timetable-cell header-cell\">화</div>\n            <div class=\"timetable-cell header-cell\">수</div>\n            <div class=\"timetable-cell header-cell\">목</div>\n            <div class=\"timetable-cell header-cell\">금</div>\n          </div>\n\n          <div v-for=\"(row, rowIndex) in timetableCells\" :key=\"`row-${rowIndex}`\" class=\"timetable-row\">\n            <div class=\"timetable-cell time-cell\">{{ getTimeLabel(rowIndex) }}</div>\n            <div\n              v-for=\"(cell, colIndex) in row\"\n              :key=\"`cell-${rowIndex}-${colIndex}`\"\n              class=\"timetable-cell day-cell\"\n              :class=\"{\n                'selected-for-removal': cell.title && this.excludedCourses.includes(cell.courseId)\n              }\"\n              :style=\"{\n                backgroundColor: cell.color,\n                opacity: cell.opacity\n              }\"\n              @click=\"cell.title ? toggleCourseExclusion(cell) : null\"\n            >\n              <div v-if=\"cell.title\" class=\"cell-content\">\n                <div class=\"cell-title\">{{ cell.title }}</div>\n                <div v-if=\"cell.location\" class=\"cell-location\">{{ cell.location }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 선택된 강의 정보 부분 수정 - 세로 배치로 변경 -->\n      <div v-if=\"excludedCourses.length > 0\" class=\"selected-courses-info\">\n        <p>{{ excludedCourses.length }}개의 강의가 제외되었습니다.</p>\n\n        <!-- button-group을 button-stack으로 변경 (세로 정렬) -->\n        <div class=\"button-stack\">\n          <button\n            class=\"reoptimize-button\"\n            @click=\"reoptimizeSchedule\"\n            :disabled=\"reoptimizing\"\n          >\n            <span v-if=\"!reoptimizing\">선택 강의 제외하고 재최적화</span>\n            <span v-else>재최적화 중...</span>\n          </button>\n\n          <button\n            v-if=\"optimizationCompleted && !reoptimizing\"\n            class=\"action-button primary-button\"\n            @click=\"onContinue\"\n          >\n            시간표 확인하기\n          </button>\n        </div>\n      </div>\n\n      <!-- 기존 버튼 컨테이너는 유지 (excludedCourses가 비어있을 때만 표시) -->\n      <div class=\"button-container\" v-if=\"optimizationCompleted && !reoptimizing && excludedCourses.length === 0\">\n        <button class=\"action-button primary-button\" @click=\"onContinue\">\n          시간표 확인하기\n        </button>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport { API_CONFIG } from '@/config/api';\n\nexport default {\n  name: 'OptimizationTimetableComponent',\n  props: {\n    simulationTime: {\n      type: Number,\n      default: 10000 // 10초\n    },\n    optimizationData: {\n      type: Object,\n      default: () => ({\n        grade: 2,\n        desired_credits: 15,\n        user_morning: false,\n        user_late: false,\n        user_lunch: false,\n        user_dayoff: false,\n        user_no_large_gap: false\n      })\n    }\n  },\n\n  data() {\n    return {\n      optimizationInterval: null,\n      messageChangeInterval: null,\n      optimizationCompleted: false,\n      statusMessage: \"시간표 최적화 진행 중...\",\n      optimizationResult: null,\n      timetableCells: [],\n      timeSlots: 18, // 9시간 (9시부터 18시까지)\n      daysOfWeek: 5,\n      colors: ['#e67e22', '#e74c3c', '#f1c40f', '#2ecc71', '#3498db', '#9b59b6'],\n      optimizationMessages: [\n        \"사용자 선호도 분석 중...\",\n        \"과목 간 시간 배치 최적화 중...\",\n        \"팀플 없는 수업 고민 중...\",\n        \"시간대별 집중력 패턴 고려 중...\",\n        \"균형 잡힌 시간표 계산 중...\",\n        \"조성원 교수님과 상담중...\",\n        \"과목 선호도 반영 중...\",\n        \"출튀하기 좋은 수업 찾는 중...\",\n        \"최종 시간표 생성 중...\",\n      ],\n      optimizationFailed: false,\n      excludedCourses: [],      // 제외할 강의 ID 배열\n      reoptimizing: false,      // 재최적화 진행 중 상태\n      optimizationCount: 0      // 최적화 실행 횟수\n    }\n  },\n\n  mounted() {\n    this.initTimetable();\n    this.startOptimizationAnimation();\n\n    // API 호출\n    this.callOptimizationAPI();\n  },\n    beforeUnmount() {\n    this.stopAnimations();\n  },\n  methods: {\n    // 초기화 함수\n    initTimetable() {\n      // 시간표 초기화 - 30분 단위 18슬롯 (9:00-17:30)\n      this.timetableCells = Array(this.timeSlots).fill().map(() =>\n        Array(this.daysOfWeek).fill().map(() => ({\n          color: 'white',\n          opacity: 1,\n          title: '',\n          location: '',\n          courseId: null,\n          isNew: true // 기본적으로 모든 셀은 새 강의로 간주\n        }))\n      );\n    },\n\n    // 시간 레이블 생성 함수 수정\n    getTimeLabel(index) {\n      // 30분 단위 레이블 생성 (0번 행 = 9:00, 1번 행 = 9:30, 2번 행 = 10:00...)\n      const hour = Math.floor(index / 2) + 9;\n      const minute = (index % 2) * 30;\n      return `${hour}:${minute === 0 ? '00' : minute}`;\n    },\n\n    startOptimizationAnimation() {\n      // 상태 메시지 변경 인터벌 설정\n      this.messageChangeInterval = setInterval(() => {\n        const randomIndex = Math.floor(Math.random() * this.optimizationMessages.length);\n        this.statusMessage = this.optimizationMessages[randomIndex];\n      }, 2500); // 2.5초마다 메시지 변경\n\n      // 시간표 셀 애니메이션 인터벌 설정\n      this.optimizationInterval = setInterval(() => {\n        this.updateTimetableDuringOptimization();\n      }, 200); // 200ms마다 업데이트\n    },\n\n    updateTimetableDuringOptimization() {\n      // 최적화 진행 중 시간표 셀 업데이트\n      for (let row = 0; row < this.timeSlots; row++) {\n        for (let col = 0; col < this.daysOfWeek; col++) {\n          // 랜덤하게 셀 업데이트\n          if (Math.random() > 0.7) {\n            const randomValue = Math.random();\n\n            if (randomValue > 0.8) {\n              // 랜덤 색상 할당\n              const colorIndex = Math.floor(Math.random() * this.colors.length);\n              this.timetableCells[row][col].color = this.colors[colorIndex];\n              this.timetableCells[row][col].opacity = Math.random() * 0.5 + 0.5;\n            } else if (randomValue > 0.4) {\n              // 색상 제거\n              this.timetableCells[row][col].color = 'white';\n              this.timetableCells[row][col].opacity = 1;\n            }\n          }\n        }\n      }\n    },\n\n    async callOptimizationAPI() {\n      try {\n        this.optimizationInProgress = true;\n\n        // Use the API config\n        const apiUrl = API_CONFIG.getFullUrl(API_CONFIG.endpoints.SCHEDULE);\n\n        // 제거할 강의 목록을 요청 데이터에 추가\n        const requestData = {\n          ...this.optimizationData,\n          excluded_courses: this.excludedCourses // 모든 제외 과목 결합\n        };\n\n        console.log(`최적화 요청 데이터 (${this.optimizationCount + 1}번째 요청):`, requestData);\n\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(requestData)\n        });\n\n        if (!response.ok) {\n          throw new Error(`API 요청 실패: ${response.status}`);\n        }\n\n        // API 응답 저장\n        this.optimizationResult = await response.json();\n        console.log(`최적화 결과 (${this.optimizationCount + 1}번째):`, this.optimizationResult);\n\n        // 최적화 카운트 증가\n        this.optimizationCount++;\n\n        // 애니메이션 시간이 지나면 결과 표시\n        setTimeout(() => {\n          this.completeOptimization();\n        }, this.reoptimizing ? 2000 : this.simulationTime); // 재최적화일 경우 더 짧게\n      } catch (error) {\n        console.error('API 호출 오류:', error);\n\n        // 애니메이션 중지\n        this.stopAnimations();\n\n        // 오류 메시지 표시\n        this.optimizationCompleted = false;\n        this.reoptimizing = false;\n        this.statusMessage = \"최적화 중 오류가 발생했습니다.\";\n\n        // 사용자에게 알림\n        alert(\"시간표 최적화 중 오류가 발생했습니다. 관리자에게 문의하세요.\");\n\n        // 테스트 데이터 사용하지 않고 오류 UI 표시\n        this.showErrorUI();\n      }\n    },\n\n    // 오류 UI 표시 메서드 추가\n    showErrorUI() {\n      // 최적화 실패 UI 표시\n      this.optimizationResult = null; // 결과 초기화\n\n      // 에러 상태 표시를 위한 클래스 추가\n      this.statusMessage = \"시간표 최적화에 실패했습니다.\";\n\n      // 재시도 버튼 표시를 위한 상태 업데이트\n      this.optimizationFailed = true;\n    },\n\n    completeOptimization() {\n      this.stopAnimations();\n      this.optimizationCompleted = true;\n      this.reoptimizing = false;\n      this.statusMessage = \"최적화 완료! 당신의 맞춤형 시간표가 준비되었습니다.\";\n\n      if (this.optimizationResult && this.optimizationResult.selected) {\n        // API 응답으로 시간표 표시\n        this.displayOptimizedSchedule(this.optimizationResult.selected);\n\n        // 만약 결과에 제외된 강의 정보가 있다면 업데이트\n        if (this.optimizationResult.excluded && this.optimizationResult.excluded.length > 0) {\n          console.log(\"서버에서 제외된 강의: \", this.optimizationResult.excluded);\n          // excluded 필드에서 과목 ID만 추출하여 excludedCourses 업데이트\n          const excludedIds = this.optimizationResult.excluded.map(course => course.subjId);\n          this.excludedCourses = excludedIds;\n        }\n      } else {\n        this.showErrorUI();\n        return;\n      }\n\n      // 재최적화가 끝났으면, 상태를 정리\n      this.takenCoursesToRemove = [];\n    },\n\n    displayOptimizedSchedule(courses) {\n      this.initTimetable();\n\n      // 색상 인덱스\n      let colorIndex = 0;\n\n      courses.forEach(course => {\n        const courseColor = this.colors[colorIndex % this.colors.length];\n        colorIndex++;\n\n        // schedule_info 배열에서 각 시간표 정보 처리\n        course.schedule_info.forEach(schedule => {\n          const day = schedule.day;\n          const start = schedule.start;\n          const end = schedule.end;\n          const location = schedule.location || '';\n\n          const dayIndex = this.getDayIndex(day);\n\n          // 시간표에 표시 (30분 단위 고려)\n          for (let t = start; t <= end; t++) {\n            // 시간 인덱스 변환 (1교시 = 9:00 = 인덱스 0)\n            const timeIndex = t - 1;\n\n            if (timeIndex >= 0 && timeIndex < this.timeSlots && dayIndex >= 0 && dayIndex < this.daysOfWeek) {\n              this.timetableCells[timeIndex][dayIndex].color = courseColor;\n              this.timetableCells[timeIndex][dayIndex].opacity = 1;\n              this.timetableCells[timeIndex][dayIndex].title = course.name;\n              this.timetableCells[timeIndex][dayIndex].location = location;\n              this.timetableCells[timeIndex][dayIndex].courseId = course.subjId;\n            }\n          }\n        });\n      });\n    },\n\n    getDayIndex(dayChar) {\n      const days = { '월': 0, '화': 1, '수': 2, '목': 3, '금': 4 };\n      return days[dayChar] !== undefined ? days[dayChar] : -1;\n    },\n\n    stopAnimations() {\n      // 모든 애니메이션 중지\n      if (this.optimizationInterval) {\n        clearInterval(this.optimizationInterval);\n      }\n      if (this.messageChangeInterval) {\n        clearInterval(this.messageChangeInterval);\n      }\n    },\n\n    toggleCourseExclusion(cell) {\n      // 강의 선택/해제 토글\n      if (!cell.courseId) return;\n\n      console.log(`토글 강의: ${cell.title} (ID: ${cell.courseId})`);\n\n      const index = this.excludedCourses.indexOf(cell.courseId);\n      if (index === -1) {\n        // 아직 선택되지 않은 경우 추가\n        this.excludedCourses.push(cell.courseId);\n      } else {\n        // 이미 선택된 경우 제거\n        this.excludedCourses.splice(index, 1);\n      }\n\n      // 현재 선택 로그\n      console.log('선택된 제외 강의:', this.excludedCourses);\n    },\n\n    reoptimizeSchedule() {\n      // 선택한 강의를 제외하고 시간표 재최적화\n      if (this.excludedCourses.length === 0) {\n        return; // 선택된 강의가 없으면 아무 작업도 수행하지 않음\n      }\n\n      this.reoptimizing = true;\n      this.optimizationCompleted = false; // 다시 최적화 시작\n      this.statusMessage = \"선택한 강의를 제외하고 시간표를 다시 최적화하는 중...\";\n\n      // 선택된 강의 ID 로그 출력\n      console.log(`${this.excludedCourses.length}개 강의를 제외하고 재최적화 시작:`, this.excludedCourses);\n\n      // 간단한 애니메이션 시작\n      this.startOptimizationAnimation();\n\n      // API 호출하여 재최적화 수행\n      this.callOptimizationAPI();\n    },\n\n    onContinue() {\n      // 최적화 완료 이벤트 발생 (결과가 있으면 전달)\n      this.$emit('optimization-completed', this.optimizationResult);\n    },\n\n    retryOptimization() {\n      // 상태 초기화\n      this.optimizationFailed = false;\n      this.statusMessage = \"시간표 최적화 진행 중...\";\n\n      // 애니메이션 다시 시작\n      this.startOptimizationAnimation();\n\n      // API 다시 호출\n      this.callOptimizationAPI();\n    },\n  }\n}\n</script>\n\n<style scoped>\n/* ==========================================================================\n   1. 컨테이너 및 카드 레이아웃\n   ========================================================================== */\n.optimization-container {\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n.optimization-card {\n  width: 95%;\n  max-width: 1000px;\n  margin: 0 auto;\n  background-color: white;\n  border-radius: 16px;\n  padding: 15px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n  box-sizing: border-box;\n\n}\n\n/* ==========================================================================\n   2. 상태 메시지 및 알림\n   ========================================================================== */\n.status-message {\n  font-size: 1.1rem;\n  font-weight: 500;\n  margin-bottom: 20px;\n  padding: 10px 20px;\n  background-color: var(--primary-color);\n  color: white;\n  text-align: center;\n  border-radius: 8px;\n}\n\n.status-message.completed {\n  background-color: #10b981;\n  font-size: 1.4rem;\n}\n\n.taken-course-hint {\n  font-size: 0.9rem;\n  margin-top: 8px;\n  opacity: 0.9;\n}\n\n/* 에러 상태 스타일 */\n.status-message.error {\n  background-color: #ef4444;\n}\n\n.error-hint {\n  margin-top: 12px;\n  font-size: 0.9rem;\n}\n\n.error-hint ul {\n  text-align: left;\n  margin: 8px 0;\n  padding-left: 20px;\n}\n\n.retry-button {\n  margin-top: 10px;\n  padding: 8px 16px;\n  background-color: white;\n  color: #ef4444;\n  border: none;\n  border-radius: 4px;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.retry-button:hover {\n  background-color: #f9fafb;\n}\n\n/* ==========================================================================\n   3. 시간표 컨테이너와 테이블 구조\n   ========================================================================== */\n.timetable-container {\n  width: 100%;\n  padding: 0;\n  margin-bottom: 20px;\n  overflow-x: auto;\n}\n\n.timetable {\n  width: 100%;\n  table-layout: fixed;\n  border-collapse: collapse;\n  background-color: white;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.timetable-row {\n  display: flex;\n  border-bottom: 1px solid #e5e7eb;\n  height: 60px; /* 80px에서 60px로 줄임 */\n}\n\n.timetable-cell {\n  flex: 1;\n  padding: 0;\n  border-right: 1px solid #e5e7eb;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  box-sizing: border-box;\n  min-width: 120px;\n  position: relative;\n}\n\n/* ==========================================================================\n   4. 헤더와 시간 셀\n   ========================================================================== */\n.time-header-cell {\n  flex: 0 0 100px;\n  min-width: 100px;\n  background-color: #f8fafc;\n}\n\n.header-cell {\n  background-color: #f8fafc;\n  font-weight: 600;\n  height: 50px;\n  font-size: 1.2rem;\n}\n\n.time-cell {\n  flex: 0 0 100px;\n  min-width: 100px;\n  background-color: #f8fafc;\n  font-weight: 500;\n  color: var(--gray-color);\n  font-size: 1.1rem;\n}\n\n.day-cell {\n  flex: 1;\n  min-width: 130px;\n}\n\n/* ==========================================================================\n   5. 셀 내용 스타일\n   ========================================================================== */\n.cell-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 2px;\n  text-align: center;\n}\n\n.cell-title {\n  font-weight: bold;\n  font-size: 0.8rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.cell-location {\n  font-size: 0.7rem;\n  opacity: 0.8;\n}\n\n/* ==========================================================================\n   6. 이미 들은 강의 및 선택 표시\n   ========================================================================== */\n.taken-course-indicator {\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: rgba(255, 0, 0, 0.7);\n  color: white;\n  padding: 2px 6px;\n  font-size: 0.7rem;\n  border-radius: 0 6px 0 6px;\n  z-index: 2;\n}\n\n.selected-for-removal {\n  opacity: 0.5 !important;\n  background-image: repeating-linear-gradient(45deg,\n    rgba(0, 0, 0, 0.1),\n    rgba(0, 0, 0, 0.1) 10px,\n    rgba(0, 0, 0, 0.2) 10px,\n    rgba(0, 0, 0, 0.2) 20px) !important;\n  position: relative;\n}\n\n.selected-for-removal::before {\n  content: \"제외됨\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 2px 6px;\n  font-size: 0.7rem;\n  border-radius: 0 6px 0 6px;\n  z-index: 2;\n}\n\n/* ==========================================================================\n   7. 버튼 스타일\n   ========================================================================== */\n.button-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n}\n\n.action-button, .reoptimize-button {\n  padding: 12px 24px;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n}\n\n.reoptimize-button {\n  margin-top: 20px;\n}\n\n.reoptimize-button:disabled, .action-button:disabled {\n  background-color: #cbd5e0;\n  color: #a0aec0;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n.selected-courses-info {\n  margin-top: 20px;\n  padding: 15px;\n  background-color: #f8fafc;\n  border-radius: 8px;\n  text-align: center;\n  border: 1px solid #e5e7eb;\n}\n/* 버튼 그룹 스타일 */\n.button-group {\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  margin-top: 15px;\n}\n\n/* selected-courses-info 내부 정렬 수정 */\n.selected-courses-info {\n  margin-top: 20px;\n  padding: 15px;\n  background-color: #f8fafc;\n  border-radius: 8px;\n  text-align: center;\n  border: 1px solid #e5e7eb;\n}\n\n/* 재최적화 버튼 스타일 */\n.reoptimize-button {\n  padding: 12px 24px;\n  background-color: #6b7280;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.reoptimize-button:hover:not(:disabled) {\n  background-color: #4b5563;\n  transform: translateY(-2px);\n}\n\n/* 세로 정렬 버튼 스택 */\n.button-stack {\n  display: flex;\n  flex-direction: column; /* 세로 정렬 */\n  align-items: center;    /* 가운데 정렬 */\n  gap: 12px;              /* 버튼 사이 간격 */\n  margin-top: 15px;\n}\n\n/* 버튼 너비 설정 */\n.button-stack button {\n  width: 100%;           /* 전체 너비 */\n  max-width: 300px;      /* 최대 너비 제한 */\n}\n\n/* ==========================================================================\n   8. 그리드 행 구분선\n   ========================================================================== */\n.grid-row-divider {\n  position: absolute;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background-color: #e9ecef;\n  z-index: 1;\n}\n\n/* ==========================================================================\n   9. 반응형 디자인\n   ========================================================================== */\n@media (max-width: 1200px) {\n  .optimization-card {\n    padding: 15px;\n  }\n\n  .timetable-cell {\n    min-width: 110px;\n  }\n}\n\n@media (max-width: 992px) {\n  .optimization-card {\n    width: 95%;\n    padding: 15px;\n  }\n\n  .status-message {\n    font-size: 1.1rem;\n    padding: 12px 20px;\n  }\n\n  .timetable-row {\n    height: 65px;\n  }\n\n  .timetable-cell {\n    min-width: 100px;\n  }\n\n  .time-cell, .time-header-cell {\n    flex: 0 0 80px;\n    min-width: 80px;\n  }\n\n  .header-cell {\n    font-size: 1rem;\n  }\n\n  .cell-title {\n    font-size: 0.85rem;\n  }\n\n  .cell-location {\n    font-size: 0.75rem;\n  }\n}\n\n@media (max-width: 768px) {\n  .optimization-card {\n    width: 100%;\n    padding: 10px;\n  }\n\n  .timetable-row {\n    height: 60px;\n  }\n\n  .time-cell, .time-header-cell {\n    flex: 0 0 70px;\n    min-width: 70px;\n    font-size: 0.9rem;\n  }\n\n  .header-cell {\n    font-size: 1rem;\n    height: 50px;\n  }\n\n  .day-cell {\n    min-width: 90px;\n  }\n\n  .status-message {\n    font-size: 1rem;\n    padding: 10px 15px;\n  }\n\n  .status-message.completed {\n    font-size: 1.1rem;\n  }\n\n  .cell-title {\n    font-size: 0.8rem;\n  }\n\n  .cell-location {\n    font-size: 0.7rem;\n  }\n\n  .taken-course-indicator {\n    font-size: 0.6rem;\n    padding: 1px 4px;\n  }\n}\n\n@media (max-width: 576px) {\n  .optimization-card {\n    padding: 8px;\n  }\n\n  .timetable-row {\n    height: 50px;\n  }\n\n  .time-cell, .time-header-cell {\n    flex: 0 0 50px;\n    min-width: 50px;\n    font-size: 0.7rem;\n  }\n\n  .header-cell {\n    font-size: 0.8rem;\n    padding: 6px 2px;\n  }\n\n  .timetable-cell {\n    min-width: 70px;\n    padding: 2px;\n  }\n\n  .cell-title {\n    font-size: 0.7rem;\n    margin-bottom: 1px;\n  }\n\n  .cell-location {\n    font-size: 0.6rem;\n  }\n\n  .status-message {\n    font-size: 0.9rem;\n    padding: 8px 10px;\n  }\n\n  .reoptimize-button, .action-button {\n    padding: 10px 16px;\n    font-size: 0.9rem;\n  }\n}\n</style>","// src/config/api.js\nexport const API_CONFIG = {\n  // ======= API URL 설정 =======\n  BASE_URL: 'https://fd5b-210-102-204-31.ngrok-free.app',\n  // ===========================\n\n  endpoints: {\n    SCHEDULE: '/api/schedule',\n    FEEDBACK: '/api/feedback'\n  },\n\n  getFullUrl(endpoint) {\n    return `${this.BASE_URL}${endpoint}`;\n  }\n};","import { render } from \"./OptimizationComponent.vue?vue&type=template&id=7a611d79&scoped=true\"\nimport script from \"./OptimizationComponent.vue?vue&type=script&lang=js\"\nexport * from \"./OptimizationComponent.vue?vue&type=script&lang=js\"\n\nimport \"./OptimizationComponent.vue?vue&type=style&index=0&id=7a611d79&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7a611d79\"]])\n\nexport default __exports__","<template>\n  <div class=\"schedule-container\">\n    <div class=\"schedule-card\">\n      <div class=\"schedule-header\">\n        <h1 class=\"title\">당신의 시간표는</h1>\n        <p class=\"subtitle\">맞춤형 일정을 확인해보세요</p>\n      </div>\n\n      <div class=\"schedule-content\">\n        <div class=\"timetable\">\n          <div class=\"day-header\">\n            <div class=\"time-slot\"></div>\n            <div class=\"day\">월</div>\n            <div class=\"day\">화</div>\n            <div class=\"day\">수</div>\n            <div class=\"day\">목</div>\n            <div class=\"day\">금</div>\n          </div>\n\n          <div class=\"timetable-grid\">\n            <div class=\"grid-container\">\n              <!-- 시간대 표시 -->\n              <div class=\"time-column\">\n                <div class=\"time\">9:00</div>\n                <div class=\"time\">9:30</div>\n                <div class=\"time\">10:00</div>\n                <div class=\"time\">10:30</div>\n                <div class=\"time\">11:00</div>\n                <div class=\"time\">11:30</div>\n                <div class=\"time\">12:00</div>\n                <div class=\"time\">12:30</div>\n                <div class=\"time\">13:00</div>\n                <div class=\"time\">13:30</div>\n                <div class=\"time\">14:00</div>\n                <div class=\"time\">14:30</div>\n                <div class=\"time\">15:00</div>\n                <div class=\"time\">15:30</div>\n                <div class=\"time\">16:00</div>\n                <div class=\"time\">16:30</div>\n                <div class=\"time\">17:00</div>\n                <div class=\"time\">17:30</div>\n              </div>\n\n              <!-- 실제 시간표 내용 -->\n              <div class=\"schedule-grid\">\n                <!-- 배경 격자 생성 -->\n                <div v-for=\"i in 18\" :key=\"`grid-row-${i}`\" class=\"grid-row-divider\" :style=\"{top: `${i * 30}px`}\"></div>\n\n                <!-- 스케줄 아이템 -->\n                <template v-for=\"(item, index) in scheduleItems\" :key=\"index\">\n                  <div\n                    class=\"schedule-item\"\n                    :class=\"item.type\"\n                    :style=\"{\n                      gridColumn: `${item.day} / span 1`,\n                      gridRow: `${calculateGridRow(item.startHour, item.startMinute)} / span ${calculateGridSpan(item.duration)}`\n                    }\"\n                  >\n                    <span class=\"item-title\">{{ item.title }}</span>\n                    <span v-if=\"item.location\" class=\"item-location\">{{ item.location }}</span>\n                  </div>\n                </template>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <!-- 최적화 정보 표시 섹션 -->\n      <div class=\"optimization-info\" v-if=\"optimizationSummary\">\n        <h2 class=\"info-title\">최적화 정보</h2>\n        <div class=\"info-grid\">\n          <div class=\"info-card\">\n            <h3>과목 정보</h3>\n            <p><strong>총 학점:</strong> {{ optimizationSummary.totalCredits }}학점</p>\n            <p><strong>총 과목 수:</strong> {{ optimizationSummary.totalCourses }}개</p>\n          </div>\n          <div class=\"info-card\">\n            <h3>최적화 점수</h3>\n            <p><strong>목적 함수 값:</strong> {{ Math.round(optimizationSummary.objectiveValue * 100) / 100 }}</p>\n            <p><strong>Priority 점수:</strong> {{ optimizationSummary.breakdown.priority }}</p>\n          </div>\n          <div class=\"info-card\">\n            <h3>선호도 반영</h3>\n            <p><strong>아침 수업:</strong> {{ optimizationSummary.breakdown.mor }}</p>\n            <p><strong>저녁 수업:</strong> {{ optimizationSummary.breakdown.late }}</p>\n            <p><strong>점심 시간대:</strong> {{ optimizationSummary.breakdown.lunch }}</p>\n            <p><strong>공강일:</strong> {{ optimizationSummary.breakdown.freeday }}</p>\n            <p><strong>긴 공강:</strong> {{ optimizationSummary.breakdown.longgap }}</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- 피드백 섹션 -->\n      <div class=\"feedback-section\" v-if=\"!feedbackSubmitted\">\n        <h2 class=\"feedback-title\">시간표 피드백</h2>\n        <p class=\"feedback-description\">생성된 시간표에 대한 의견을 알려주세요!</p>\n\n        <div class=\"rating-container\">\n          <div class=\"star-rating\">\n            <span class=\"rating-label\">만족도:</span>\n            <div class=\"stars\">\n              <span\n                v-for=\"star in 5\"\n                :key=\"star\"\n                class=\"star\"\n                :class=\"{ 'active': star <= rating }\"\n                @click=\"setRating(star)\"\n              >★</span>\n            </div>\n          </div>\n        </div>\n\n        <!-- 피드백 폼 부분 -->\n        <div class=\"feedback-form\">\n          <textarea\n            v-model=\"feedbackText\"\n            class=\"feedback-input\"\n            placeholder=\"이 시간표에 대한 의견을 자유롭게 작성해주세요...\"\n            rows=\"4\"\n            :disabled=\"isSubmitting\"\n          ></textarea>\n\n          <div v-if=\"feedbackError\" class=\"feedback-error\">\n            {{ feedbackError }}\n          </div>\n\n          <button\n            class=\"submit-button\"\n            @click=\"submitFeedback\"\n            :disabled=\"isSubmitting\"\n          >\n            <span v-if=\"isSubmitting\">제출 중...</span>\n            <span v-else>피드백 제출</span>\n          </button>\n        </div>\n\n      </div>\n\n      <!-- 피드백 제출 성공 메시지 -->\n      <div class=\"feedback-success\" v-else>\n        <div class=\"success-icon\">✓</div>\n        <h2 class=\"success-title\">피드백이 제출되었습니다!</h2>\n        <p class=\"success-message\">소중한 의견 감사합니다.</p>\n      </div>\n\n      <!-- 액션 버튼 -->\n      <div class=\"action-buttons\" :class=\"{ 'with-margin': feedbackSubmitted }\">\n        <button class=\"action-button restart-button\" @click=\"onRestart\">\n          다시 시작\n        </button>\n        <button\n          class=\"action-button save-button\"\n          @click=\"onSave\"\n          :disabled=\"isSaving\"\n        >\n          <span v-if=\"isSaving\">\n            <span class=\"loading-spinner\"></span> 저장 중...\n          </span>\n          <span v-else>\n            저장하기\n          </span>\n        </button>\n      </div>\n\n      <!-- 저장 결과 메시지 -->\n      <div v-if=\"saveSuccess\" class=\"save-notification success\">\n        <span class=\"notification-icon\">✓</span>\n        시간표가 클립보드에 복사되었습니다!\n      </div>\n\n      <div v-if=\"saveError\" class=\"save-notification error\">\n        <span class=\"notification-icon\">⚠</span>\n        {{ saveError }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { API_CONFIG } from '@/config/api';\nimport html2canvas from 'html2canvas';\n\nexport default {\n  name: 'ScheduleComponent',\n  props: {\n    scheduleData: {\n      type: Array,\n      default: () => []\n    },\n    apiResult: {\n      type: Object,\n      default: null\n    },\n    userPreferences: {\n      type: Object,\n      default: () => ({\n        grade: null,\n        desired_credits: null,\n        user_morning: false,\n        user_late: false,\n        user_lunch: false,\n        user_dayoff: false,\n        user_no_large_gap: false,\n        excluded_courses: []\n      })\n    }\n  },\n  data() {\n    return {\n      // 피드백 관련 데이터\n      rating: 0,\n      feedbackText: '',\n      feedbackSubmitted: false,\n      optimizationSummary: null,\n      isSubmitting: false,\n      feedbackError: null,\n      isSaving: false,         // 저장 중 상태\n      saveSuccess: false,      // 저장 성공 상태\n      saveError: null          // 저장 오류 메시지\n    }\n  },\n  computed: {\n    scheduleItems() {\n      if (this.scheduleData.length > 0) {\n        return this.scheduleData;\n      } else {\n        return this.generateDummySchedule();\n      }\n    }\n  },\n  created() {\n    // 최적화 결과 요약 정보 생성\n    if (this.$props.scheduleData && this.$props.apiResult) {\n      this.processOptimizationSummary(this.$props.apiResult);\n    }\n  },\n  methods: {\n    onRestart() {\n      this.$emit('restart');\n    },\n\n    // 피드백 관련 메소드 구현해야 함\n    setRating(star) {\n      this.rating = star;\n    },\n\n    async submitFeedback() {\n      try {\n\n        // 로딩 상태 시작\n        this.isSubmitting = true;\n        this.feedbackError = null;\n\n        // 유효성 검사\n        if (this.rating === 0) {\n          this.feedbackError = \"별점을 선택해주세요.\";\n          return;\n        }\n        // 피드백 데이터 준비\n        const feedbackData = {\n          rating: this.rating,\n          comment: this.feedbackText || \"\",\n          schedule: this.scheduleData || [],\n          // 부모 컴포넌트에서 전달받은 사용자 설정 정보 사용\n          preferences: this.userPreferences\n        };\n\n        console.log('피드백 제출 데이터:', feedbackData);\n\n        // API URL 설정\n        const apiUrl = API_CONFIG.getFullUrl(API_CONFIG.endpoints.FEEDBACK);\n\n        // API 호출\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(feedbackData)\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          console.error('서버 오류 응답:', errorData);\n          throw new Error(`서버 응답 오류: ${response.status}`);\n        }\n\n        const result = await response.json();\n        console.log('피드백 제출 결과:', result);\n\n        // 피드백 제출 상태로 변경\n        this.feedbackSubmitted = true;\n\n        // 제출 완료 메시지로 스크롤\n        setTimeout(() => {\n          const successEl = document.querySelector('.feedback-success');\n          if (successEl) {\n            successEl.scrollIntoView({ behavior: 'smooth' });\n          }\n        }, 100);\n\n      } catch (error) {\n        console.error('피드백 제출 오류:', error);\n        this.feedbackError = \"피드백 제출 중 오류가 발생했습니다. 나중에 다시 시도해주세요.\";\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n\n    // 시간표를 이미지로 저장하는 메소드\n    async onSave() {\n      // 이미 저장 중이면 중복 실행 방지\n      if (this.isSaving) return;\n\n      // 상태 초기화\n      this.isSaving = true;\n      this.saveSuccess = false;\n      this.saveError = null;\n\n      try {\n        // 1. 시간표 컨테이너 요소 찾기\n        const timetableEl = document.querySelector('.timetable-container');\n        if (!timetableEl) {\n          throw new Error('시간표 요소를 찾을 수 없습니다.');\n        }\n\n        // 2. HTML2Canvas로 시간표 캡처\n        const canvas = await html2canvas(timetableEl, {\n          backgroundColor: '#ffffff',     // 배경색 설정\n          scale: 2,                       // 고화질을 위한 스케일 2배 설정\n          useCORS: true,                  // 크로스 오리진 이미지 허용\n          logging: false                  // 디버그 로그 비활성화\n        });\n\n        // 3. 캔버스를 PNG Blob으로 변환\n        canvas.toBlob(async (blob) => {\n          try {\n            // 4. 클립보드 API 지원 확인\n            if (navigator.clipboard && navigator.clipboard.write) {\n              // 최신 클립보드 API 사용 (Chrome, Edge, Firefox)\n              const clipboardItem = new ClipboardItem({ 'image/png': blob });\n              await navigator.clipboard.write([clipboardItem]);\n\n              // 성공 메시지 표시\n              this.saveSuccess = true;\n\n              // 3초 후 성공 메시지 숨기기\n              setTimeout(() => {\n                this.saveSuccess = false;\n              }, 3000);\n\n            } else {\n              // 구형 브라우저용 대체 방법: 다운로드로 제공\n              const url = URL.createObjectURL(blob);\n              const a = document.createElement('a');\n              a.href = url;\n              a.download = '내_시간표.png';\n              document.body.appendChild(a);\n              a.click();\n              document.body.removeChild(a);\n\n              // 다운로드 성공 메시지\n              this.saveSuccess = true;\n              setTimeout(() => {\n                this.saveSuccess = false;\n              }, 3000);\n            }\n          } catch (clipError) {\n            console.error('클립보드 저장 실패:', clipError);\n            this.saveError = '클립보드에 저장할 수 없습니다. 권한을 확인하거나 다시 시도해주세요.';\n          } finally {\n            this.isSaving = false;\n          }\n        }, 'image/png');\n\n      } catch (error) {\n        console.error('이미지 생성 오류:', error);\n        this.saveError = '시간표 이미지를 생성할 수 없습니다. 다시 시도해주세요.';\n        this.isSaving = false;\n      }\n    },\n\n    // 최적화 정보 처리\n    processOptimizationSummary(result) {\n      if (result && result.selected) {\n        this.optimizationSummary = {\n          totalCredits: result.total_credits || 0,\n          totalCourses: result.selected.length || 0,\n          objectiveValue: result.objective_value || 0,\n          breakdown: result.breakdown || {\n            priority: 0,\n            dev: 0,\n            mor: 0,\n            late: 0,\n            lunch: 0,\n            freeday: 0,\n            longgap: 0\n          }\n        };\n      }\n    },\n\n    // 더미 시간표 생성 함수\n    generateDummySchedule() {\n      return [\n        { day: 1, startHour: 9, duration: 2, title: '공업수학', type: 'study' },\n        { day: 1, startHour: 13, duration: 2, title: '대학영어', type: 'study' },\n        { day: 2, startHour: 10, duration: 2, title: '일반물리', type: 'study' },\n        { day: 3, startHour: 14, duration: 3, title: '종합설계', type: 'project' },\n        { day: 4, startHour: 9, duration: 1, title: '러닝', type: 'exercise' },\n        { day: 5, startHour: 11, duration: 2, title: 'OR', type: 'hobby' },\n        { day: 5, startHour: 15, duration: 2, title: '알바', type: 'social' }\n      ];\n    },\n\n    // 시간을 그리드 행 번호로 변환\n    calculateGridRow(hour, minute) {\n      // 9시부터 시작, 30분마다 1행\n      const hourOffset = (hour - 9) * 2;\n      const minuteOffset = minute === 30 ? 1 : 0;\n      return hourOffset + minuteOffset + 1; // 1-based grid rows\n    },\n\n    // 시간 단위 기간을 그리드 행 범위로 변환\n    calculateGridSpan(durationHours) {\n      // 시간을 행 수로 변환 (1시간 = 2행)\n      return durationHours * 2;\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* ==========================================================================\n   1. 기본 컨테이너 및 카드 레이아웃\n   ========================================================================== */\n.schedule-container {\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n.schedule-card {\n  background-color: white;\n  border-radius: 16px;\n  overflow: hidden;\n  width: 100%;\n  max-width: 900px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n}\n\n/* ==========================================================================\n   2. 헤더 스타일\n   ========================================================================== */\n.schedule-header {\n  padding: 30px;\n  text-align: center;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.title {\n  color: var(--dark-color);\n  font-size: 28px;\n  margin-bottom: 8px;\n  font-weight: var(--heading-font-weight);\n}\n\n.subtitle {\n  color: var(--gray-color);\n  font-size: 16px;\n  margin: 0;\n}\n\n/* ==========================================================================\n   3. 시간표 구조 및 그리드\n   ========================================================================== */\n.schedule-content {\n  padding: 30px;\n}\n\n.timetable {\n  width: 100%;\n  overflow-x: auto;\n}\n\n.day-header {\n  display: grid;\n  grid-template-columns: 60px repeat(5, 1fr);\n  text-align: center;\n  font-weight: 600;\n  border-bottom: 1px solid #e9ecef;\n  padding-bottom: 10px;\n}\n\n.day {\n  padding: 10px;\n}\n\n.grid-container {\n  display: flex;\n  width: 100%;\n  position: relative; /* 자식 요소의 절대 위치 기준 */\n}\n\n.time-column {\n  width: 60px;\n  flex-shrink: 0;\n  z-index: 2; /* 그리드보다 위에 표시 */\n  background-color: #f8f9fa;\n  border-right: 1px solid #e9ecef;\n}\n\n.time {\n  height: 30px; /* 30분 단위 행 높이 */\n  display: flex;\n  align-items: center; /* 중앙 정렬로 변경 */\n  justify-content: center;\n  color: var(--gray-color);\n  font-size: 12px;\n  border-bottom: 1px solid #e9ecef; /* 구분선 추가 */\n  box-sizing: border-box;\n}\n\n/* 스케줄 그리드 개선 */\n.schedule-grid {\n  flex-grow: 1;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(18, 30px); /* 30분 단위, 9:00-17:30 */\n  position: relative;\n  min-height: 540px; /* 18행 * 30px */\n  border: 1px solid #e9ecef;\n  border-left: none;\n}\n\n/* 그리드 행 구분선 */\n.grid-row-divider {\n  position: absolute;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background-color: #e9ecef;\n  z-index: 1;\n}\n\n/* 스케줄 아이템 스타일 개선 */\n.schedule-item {\n  background-color: #e2e8f0;\n  border-radius: 6px;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: 500;\n  text-align: center;\n  color: white;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  z-index: 5; /* 배경 격자보다 위에 표시 */\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.schedule-item:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n  z-index: 10; /* 호버 시 다른 아이템보다 위에 표시 */\n}\n\n/* ==========================================================================\n   4. 시간표 항목 및 유형별 스타일\n   ========================================================================== */\n.schedule-item {\n  background-color: #e2e8f0;\n  border-radius: 6px;\n  padding: 4px;\n  margin: 1px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: 500;\n  text-align: center;\n  color: white;\n  overflow: hidden;\n}\n\n.item-title {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-weight: bold;\n  margin-bottom: 2px;\n}\n\n.item-location {\n  font-size: 0.8rem;\n  opacity: 0.8;\n}\n\n/* 스케줄 항목 유형별 색상 */\n.study {\n  background-color: var(--primary-color);\n}\n\n.project {\n  background-color: #38b2ac;\n}\n\n.exercise {\n  background-color: #ed8936;\n}\n\n.hobby {\n  background-color: #9f7aea;\n}\n\n.social {\n  background-color: #f56565;\n}\n\n/* ==========================================================================\n   5. 액션 버튼\n   ========================================================================== */\n.action-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  padding: 30px;\n  border-top: 1px solid #e9ecef;\n}\n\n.action-button {\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  border: none;\n  transition: all 0.2s ease;\n}\n\n.restart-button {\n  background-color: #e9ecef;\n  color: var(--gray-color);\n}\n\n.restart-button:hover {\n  background-color: #dee2e6;\n}\n\n.save-button {\n  background-color: var(--primary-color);\n  color: white;\n}\n\n.save-button:hover:not(:disabled) {\n  background-color: var(--secondary-color);\n}\n\n.save-button:disabled {\n  background-color: #cbd5e0;\n  color: #9ca3af;\n  cursor: not-allowed;\n}\n\n/* 로딩 스피너 애니메이션 */\n.loading-spinner {\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  border: 2px solid rgba(255,255,255,0.3);\n  border-radius: 50%;\n  border-top-color: white;\n  animation: spin 1s ease-in-out infinite;\n  margin-right: 8px;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n/* 알림 메시지 스타일 */\n.save-notification {\n  position: fixed;\n  bottom: 30px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 12px 20px;\n  border-radius: 8px;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  animation: slide-up 0.3s ease, fade-out 0.3s ease 2.7s forwards;\n}\n\n.save-notification.success {\n  background-color: #10b981;\n  color: white;\n}\n\n.save-notification.error {\n  background-color: #ef4444;\n  color: white;\n}\n\n.notification-icon {\n  font-size: 18px;\n}\n\n@keyframes slide-up {\n  from { transform: translate(-50%, 20px); opacity: 0; }\n  to { transform: translate(-50%, 0); opacity: 1; }\n}\n\n@keyframes fade-out {\n  from { opacity: 1; }\n  to { opacity: 0; }\n}\n\n/* ==========================================================================\n   6. 피드백 섹션\n   ========================================================================== */\n.feedback-section {\n  padding: 30px;\n  border-top: 1px solid #e9ecef;\n}\n\n.feedback-title {\n  color: var(--dark-color);\n  font-size: 22px;\n  margin-bottom: 10px;\n  text-align: center;\n}\n\n.feedback-description {\n  color: var(--gray-color);\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n/* 별점 평가 */\n.rating-container {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 20px;\n}\n\n.star-rating {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n\n.rating-label {\n  text-align: center;\n  margin-right: 15px;\n  font-weight: 500;\n}\n\n.stars {\n  display: flex;\n}\n\n.star {\n  font-size: 28px;\n  color: #d1d5db;\n  cursor: pointer;\n  transition: color 0.2s;\n  margin-right: 5px;\n}\n\n.star:hover, .star.active {\n  color: #fbbf24;\n}\n\n/* 피드백 폼 */\n.feedback-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center; /* 중앙 정렬 */\n  gap: 15px;\n  margin-top: 15px;\n}\n\n.feedback-input {\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 8px;\n  resize: vertical;\n  font-family: inherit;\n  margin-bottom: 15px;\n}\n\n.submit-button {\n  padding: 12px 24px;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s;\n  width: auto; /* 버튼 너비를 컨텐츠에 맞게 자동 조정 */\n  min-width: 200px; /* 최소 너비 지정 */\n  text-align: center; /* 텍스트 중앙 정렬 */\n}\n\n.submit-button:hover {\n  background-color: var(--secondary-color);\n  transform: translateY(-2px);\n}\n\n.submit-button:hover:not(:disabled) {\n  background-color: var(--secondary-color);\n  transform: translateY(-2px);\n  box-shadow: 0 5px 15px rgba(67, 97, 238, 0.3);\n}\n\n/* 피드백 성공 메시지 */\n.feedback-success {\n  padding: 30px;\n  text-align: center;\n  border-top: 1px solid #e9ecef;\n}\n\n.success-icon {\n  background-color: #10b981;\n  color: white;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  margin: 0 auto 20px;\n}\n\n.success-title {\n  color: var(--dark-color);\n  font-size: 22px;\n  margin-bottom: 10px;\n}\n\n.success-message {\n  color: var(--gray-color);\n}\n\n.feedback-error {\n  color: #e53e3e;\n  background-color: #fff5f5;\n  border-left: 3px solid #e53e3e;\n  padding: 10px;\n  margin-bottom: 15px;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.submit-button:disabled {\n  background-color: #cbd5e0;\n  color: #a0aec0;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n/* ==========================================================================\n   7. 최적화 정보 섹션\n   ========================================================================== */\n.optimization-info {\n  padding: 30px;\n  border-top: 1px solid #e9ecef;\n}\n\n.info-title {\n  color: var(--dark-color);\n  font-size: 22px;\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.info-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n}\n\n.info-card {\n  background-color: #f8f9fa;\n  border-radius: 10px;\n  padding: 15px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);\n}\n\n.info-card h3 {\n  font-size: 18px;\n  margin-bottom: 10px;\n  color: var(--primary-color);\n  font-weight: 600;\n}\n\n.info-card p {\n  margin: 8px 0;\n  font-size: 14px;\n  color: var(--gray-color);\n}\n\n.info-card strong {\n  color: var(--dark-color);\n}\n\n/* ==========================================================================\n   8. 반응형 디자인 (미디어 쿼리)\n   ========================================================================== */\n@media (max-width: 768px) {\n  .schedule-card {\n    max-width: 95%;\n  }\n\n  .title {\n    font-size: 24px;\n  }\n\n  .schedule-item {\n    font-size: 12px;\n    padding: 4px;\n  }\n}\n</style>","import { render } from \"./ScheduleComponent.vue?vue&type=template&id=e97701b0&scoped=true\"\nimport script from \"./ScheduleComponent.vue?vue&type=script&lang=js\"\nexport * from \"./ScheduleComponent.vue?vue&type=script&lang=js\"\n\nimport \"./ScheduleComponent.vue?vue&type=style&index=0&id=e97701b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e97701b0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=d15009ce\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=d15009ce&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\n// Import the global styles\nimport './assets/style.css'\n\ncreateApp(App).mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktos\"] = self[\"webpackChunktos\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(4890); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_Transition","name","mode","default","_withCtx","$data","currentView","_hoisted_2","_component_start_component","onStartClicked","$options","showGradeSelect","_hoisted_3","_component_grade_select_component","initialGrade","grade","initialCredits","desiredCredits","onInfoSubmitted","handleInfoSubmission","_hoisted_4","_component_question_component","onAnswer","handleAnswer","questionNumber","currentQuestionIndex","totalQuestions","questions","length","question","_createTextVNode","_toDisplayString","currentQuestion","_","_hoisted_5","_component_optimization_component","getAnswerFor","onOptimizationCompleted","showSchedule","_hoisted_6","_component_schedule_component","scheduleData","apiResult","userPreferences","optimizationData","onRestart","restartApp","_createCommentVNode","_createElementVNode","onClick","_cache","args","onStartClick","xmlns","width","height","viewBox","fill","stroke","d","methods","this","$emit","__exports__","_Fragment","_renderList","g","_normalizeClass","$event","selectGrade","_hoisted_7","type","min","max","step","localCredits","number","_hoisted_8","disabled","submitInfo","_hoisted_9","props","Number","data","credits","style","_normalizeStyle","progress","$props","_renderSlot","_ctx","$slots","computed","answer","optimizationCompleted","optimizationFailed","reoptimizing","statusMessage","retryOptimization","_createStaticVNode","timetableCells","row","rowIndex","getTimeLabel","cell","colIndex","title","excludedCourses","includes","courseId","color","opacity","toggleCourseExclusion","location","_hoisted_10","_hoisted_11","_hoisted_12","reoptimizeSchedule","_hoisted_15","_hoisted_14","_hoisted_13","onContinue","_hoisted_16","API_CONFIG","BASE_URL","endpoints","SCHEDULE","FEEDBACK","getFullUrl","endpoint","simulationTime","Object","desired_credits","user_morning","user_late","user_lunch","user_dayoff","user_no_large_gap","optimizationInterval","messageChangeInterval","optimizationResult","timeSlots","daysOfWeek","colors","optimizationMessages","optimizationCount","mounted","initTimetable","startOptimizationAnimation","callOptimizationAPI","beforeUnmount","stopAnimations","Array","map","isNew","index","hour","Math","floor","minute","setInterval","randomIndex","random","updateTimetableDuringOptimization","col","randomValue","colorIndex","optimizationInProgress","apiUrl","requestData","excluded_courses","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","setTimeout","completeOptimization","error","alert","showErrorUI","selected","displayOptimizedSchedule","excluded","excludedIds","course","subjId","takenCoursesToRemove","courses","forEach","courseColor","schedule_info","schedule","day","start","end","dayIndex","getDayIndex","t","timeIndex","dayChar","days","undefined","clearInterval","indexOf","push","splice","i","top","scheduleItems","item","calculateGridRow","startHour","startMinute","calculateGridSpan","duration","optimizationSummary","totalCredits","totalCourses","round","objectiveValue","breakdown","priority","mor","late","lunch","freeday","longgap","feedbackSubmitted","_hoisted_26","_hoisted_17","_hoisted_18","star","rating","setRating","_hoisted_19","_hoisted_20","feedbackText","placeholder","rows","isSubmitting","_hoisted_21","feedbackError","_hoisted_22","submitFeedback","_hoisted_24","_hoisted_25","_hoisted_23","onSave","isSaving","_hoisted_28","_hoisted_29","_hoisted_27","saveSuccess","_hoisted_30","saveError","_hoisted_31","generateDummySchedule","created","processOptimizationSummary","feedbackData","comment","preferences","errorData","catch","result","successEl","document","querySelector","scrollIntoView","behavior","timetableEl","canvas","html2canvas","backgroundColor","scale","useCORS","logging","toBlob","async","navigator","clipboard","write","clipboardItem","ClipboardItem","blob","url","URL","createObjectURL","a","createElement","href","download","appendChild","click","removeChild","clipError","total_credits","objective_value","dev","hourOffset","minuteOffset","durationHours","components","StartComponent","GradeSelectComponent","QuestionComponent","OptimizationComponent","ScheduleComponent","answers","info","prepareOptimizationRequest","questionIndex","processScheduleResult","processedScheduleData","convertApiResultToScheduleData","selectedCourses","courseTypes","courseType","startTime","convertPeriodToTime","periodCount","getDayNumber","mapPeriodToTime","period","baseHour","mapScheduleToCellPosition","startPeriod","endPeriod","column","startRow","periods","rowSpan","calculateSchedulePosition","durationInRows","getCourseType","courseName","types","hash","split","reduce","acc","char","charCodeAt","getRandomType","window","scrollTo","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","keys","every","r","n","getter","__esModule","definition","o","defineProperty","enumerable","get","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}